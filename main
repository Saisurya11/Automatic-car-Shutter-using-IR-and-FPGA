`timescale 1ns / 1ps

module infrared(clk,rst,ir,out);
input clk,rst,ir;
output reg out;

reg ir1,ir2;

always@(posedge clk)
begin
ir1<=ir;
ir2<=ir1;
end

wire ir_edge=(ir1 && ~ir2);

always@(posedge clk)
begin
if(rst)
out<=0;
else
begin
if(ir2==1)
out<=0;
else if(ir2==0)
out<=1;
else
out<=1;
end
end
endmodule


module refresh_counter(clk,count);
input clk;
output reg [2:0]count=0;
always@(posedge clk)
begin
count<=count+1;
end
endmodule

module clk_ms(clk,nclk,seg_clk);
input clk;
output reg nclk=0,seg_clk=0;
reg [31:0]counter=0,counter1=0;
always@(posedge clk)
begin
if(counter<50000)
begin
counter<=counter+1;
nclk<=~nclk;
end
else
counter<=0;
end

always@(posedge clk)
begin
counter1<=counter1+1;
seg_clk<=counter1[16];
end
endmodule

module car_servo(clk,rst,ir,out,servo,an,seg);
input clk,rst,ir;
output out;
output reg servo;
output reg [7:0]an=255;
output reg [6:0]seg=127;
wire nclk,seg_clk;
clk_ms c1(clk,nclk,seg_clk);
wire [2:0]count;
refresh_counter r1(seg_clk,count);
infrared i1(nclk,rst,ir,out);


reg [3:0]bcd=0;
reg [31:0]counter_1=0;
always@(out,count,out)
begin
if(out==1)
begin

if(counter_1<1000000000)
begin
counter_1<=counter_1+1;
servo<=0;
end
else
begin
servo<=1
counter_1<=0;
end
case(count) //4526237
0:begin
bcd<=4;
an<=8'b01111111;
end
1:begin
bcd<=5;
an<=8'b10111111;
end
2:begin
bcd<=2;
an<=8'b11011111;
end
3:begin
bcd<=6;
an<=8'b11101111;
end
4:begin
bcd<=2;
an<=8'b11110111;
end
5:begin
bcd<=3;
an<=8'b11111011;
end
6:begin
bcd<=7;
an<=8'b11111101;
end
default:begin
bcd<=9;
an<=8'b11111111;
end
endcase
end
else
begin
servo<=1;
counter_1<=0;
case(count)
0:begin //016237
bcd<=1;
an<=8'b01111111;
end
1:begin
bcd<=1;
an<=8'b10111111;
end
2:begin
bcd<=6;
an<=8'b11011111;
end
3:begin
bcd<=2;
an<=8'b11101111;
end
4:begin
bcd<=3;
an<=8'b11110111;
end
5:begin
bcd<=7;
an<=8'b11111011;
end
default:begin
bcd<=9;
an<=8'b11111111;
end
endcase
end

case(bcd)
0:seg=7'b0001000; //a
1:seg=7'b0000011; //b
2:seg=7'b0000110; //e
3:seg=7'b1001000; //n
4:seg=7'b0001100; //p //present=4526237 absent=016237
5:seg=7'b1001110; //r
6:seg=7'b0010010; //s
7:seg=7'b0000111; //t
default:seg=7'b1111111;
endcase

end
endmodule

module top(clk,sw,JA,JB,LED,an,seg);
input clk,sw;
input JA;
output JB;
output LED;
output [7:0]an;
output [6:0]seg;
car_servo t1(clk,sw,JA,LED,JB,an,seg);
//car_servo(clk,rst,ir,out,servo,an,seg);
endmodule
